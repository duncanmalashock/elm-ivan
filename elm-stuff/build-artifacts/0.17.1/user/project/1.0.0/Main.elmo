var _user$project$Main$lineView = function (theline) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text(
				_user$project$Line2D$asString(theline))
			]));
};
var _user$project$Main$lineTextView = function (lines) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('readout')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('vertex-list')
					]),
				A2(_elm_lang$core$List$map, _user$project$Main$lineView, lines))
			]));
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('app')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Main$lineTextView(model.lines),
				_user$project$WebDisplay$view(model.lines)
			]));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		lines: _elm_lang$core$Native_List.fromArray(
			[
				A2(
				_user$project$Line2D$Line2D,
				{ctor: '_Tuple2', _0: 0, _1: 0},
				{ctor: '_Tuple2', _0: 550, _1: 400}),
				A2(
				_user$project$Line2D$Line2D,
				{ctor: '_Tuple2', _0: 550, _1: 0},
				{ctor: '_Tuple2', _0: 0, _1: 400})
			]),
		inBoundary: A4(_user$project$Rect2D$Rect2D, 0, 550, 0, 400),
		outBoundary: A4(_user$project$Rect2D$Rect2D, 0, 2048, 0, 2048)
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {lines: a, inBoundary: b, outBoundary: c};
	});
var _user$project$Main$NoOp = {ctor: 'NoOp'};
